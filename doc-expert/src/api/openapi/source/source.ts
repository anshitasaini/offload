/**
 * Generated by orval v6.19.1 🍺
 * Do not edit manually.
 * FastAPI
 * OpenAPI spec version: 0.1.0
 */
import { useMutation } from "@tanstack/react-query"
import type {
  MutationFunction,
  UseMutationOptions
} from "@tanstack/react-query"

import { customAxios } from "../../client"
import type { ErrorType } from "../../client"
import type {
  GetSourceRequest,
  GetSourceResponse,
  HTTPValidationError
} from ".././schemas"

/**
 * @summary Get Source
 */
export const sourceGetSource = (getSourceRequest: GetSourceRequest) => {
  return customAxios<GetSourceResponse>({
    url: `/source/`,
    method: "post",
    headers: { "Content-Type": "application/json" },
    data: getSourceRequest
  })
}

export const getSourceGetSourceMutationOptions = <
  TError = ErrorType<HTTPValidationError>,
  TContext = unknown
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof sourceGetSource>>,
    TError,
    { data: GetSourceRequest },
    TContext
  >
}): UseMutationOptions<
  Awaited<ReturnType<typeof sourceGetSource>>,
  TError,
  { data: GetSourceRequest },
  TContext
> => {
  const { mutation: mutationOptions } = options ?? {}

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof sourceGetSource>>,
    { data: GetSourceRequest }
  > = (props) => {
    const { data } = props ?? {}

    return sourceGetSource(data)
  }

  return { mutationFn, ...mutationOptions }
}

export type SourceGetSourceMutationResult = NonNullable<
  Awaited<ReturnType<typeof sourceGetSource>>
>
export type SourceGetSourceMutationBody = GetSourceRequest
export type SourceGetSourceMutationError = ErrorType<HTTPValidationError>

/**
 * @summary Get Source
 */
export const useSourceGetSource = <
  TError = ErrorType<HTTPValidationError>,
  TContext = unknown
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof sourceGetSource>>,
    TError,
    { data: GetSourceRequest },
    TContext
  >
}) => {
  const mutationOptions = getSourceGetSourceMutationOptions(options)

  return useMutation(mutationOptions)
}
